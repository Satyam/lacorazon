// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Form/TextField label and name 1`] = `
<Form
  values={
    Object {
      "two": 2,
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "two": 2,
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "two": 2,
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "two": 2,
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TextField
              label="field two"
              name="two"
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="two"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="two"
                    >
                      field two
                    </label>
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control"
                        component="input"
                        id="two"
                        name="two"
                      >
                        <FieldInner
                          className="form-control"
                          component="input"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "two": 2,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "two": 2,
                              },
                            }
                          }
                          id="two"
                          name="two"
                        >
                          <input
                            className="form-control"
                            id="two"
                            name="two"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value={2}
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="two"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "two": 2,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "two": 2,
                              },
                            }
                          }
                          name="two"
                        />
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;

exports[`Storyshots Form/TextField label and pre-formated value in multi-row field 1`] = `
<Form
  values={
    Object {
      "multi": "I'm a child
spread over
a few lines",
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "multi": "I'm a child
spread over
a few lines",
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "multi": "I'm a child
spread over
a few lines",
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "multi": "I'm a child
spread over
a few lines",
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TextField
              label="multi-line field"
              name="multi"
              rows={5}
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="multi"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="multi"
                    >
                      multi-line field
                    </label>
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control"
                        component="textarea"
                        id="multi"
                        name="multi"
                        rows={5}
                      >
                        <FieldInner
                          className="form-control"
                          component="textarea"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "multi": "I'm a child
spread over
a few lines",
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "multi": "I'm a child
spread over
a few lines",
                              },
                            }
                          }
                          id="multi"
                          name="multi"
                          rows={5}
                        >
                          <textarea
                            className="form-control"
                            id="multi"
                            name="multi"
                            onBlur={[Function]}
                            onChange={[Function]}
                            rows={5}
                            value="I'm a child
spread over
a few lines"
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="multi"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "multi": "I'm a child
spread over
a few lines",
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "multi": "I'm a child
spread over
a few lines",
                              },
                            }
                          }
                          name="multi"
                        />
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;

exports[`Storyshots Form/TextField label, name and help 1`] = `
<Form
  values={
    Object {
      "three": 3,
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "three": 3,
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "three": 3,
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "three": 3,
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TextField
              help="A little help from my friends"
              label="Field 3"
              name="three"
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="three"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="three"
                    >
                      Field 3
                    </label>
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control"
                        component="input"
                        id="three"
                        name="three"
                      >
                        <FieldInner
                          className="form-control"
                          component="input"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          id="three"
                          name="three"
                        >
                          <input
                            className="form-control"
                            id="three"
                            name="three"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value={3}
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormText
                        color="muted"
                        tag="small"
                      >
                        <small
                          className="form-text text-muted"
                        >
                          A little help from my friends
                        </small>
                      </FormText>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="three"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          name="three"
                        />
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;

exports[`Storyshots Form/TextField label, name, help plus error 1`] = `
<Form
  values={
    Object {
      "three": 3,
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "three": 3,
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {
                "three": "some error message",
              },
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "three": 3,
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {
                "three": true,
              },
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "three": 3,
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TouchField
              name="three"
            />
            <SetFieldError
              message="some error message"
              name="three"
            />
            <TextField
              help="A little help from my friends"
              label="Field 3"
              name="three"
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="three"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="three"
                    >
                      Field 3
                    </label>
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control is-invalid"
                        component="input"
                        id="three"
                        name="three"
                      >
                        <FieldInner
                          className="form-control is-invalid"
                          component="input"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {
                                "three": "some error message",
                              },
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {
                                "three": true,
                              },
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          id="three"
                          name="three"
                        >
                          <input
                            className="form-control is-invalid"
                            id="three"
                            name="three"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value={3}
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormText
                        color="muted"
                        tag="small"
                      >
                        <small
                          className="form-text text-muted"
                        >
                          A little help from my friends
                        </small>
                      </FormText>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="three"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {
                                "three": "some error message",
                              },
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {
                                "three": true,
                              },
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          name="three"
                        >
                          <FormFeedback
                            tag="div"
                          >
                            <div
                              className="invalid-feedback"
                            >
                              some error message
                            </div>
                          </FormFeedback>
                        </ErrorMessageImpl>
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;

exports[`Storyshots Form/TextField label, name, help plus touched 1`] = `
<Form
  values={
    Object {
      "three": 3,
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "three": 3,
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "three": 3,
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {
                "three": true,
              },
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "three": 3,
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TouchField
              name="three"
            />
            <TextField
              help="A little help from my friends"
              label="Field 3"
              name="three"
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="three"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="three"
                    >
                      Field 3
                    </label>
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control"
                        component="input"
                        id="three"
                        name="three"
                      >
                        <FieldInner
                          className="form-control"
                          component="input"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {
                                "three": true,
                              },
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          id="three"
                          name="three"
                        >
                          <input
                            className="form-control"
                            id="three"
                            name="three"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value={3}
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormText
                        color="muted"
                        tag="small"
                      >
                        <small
                          className="form-text text-muted"
                        >
                          A little help from my friends
                        </small>
                      </FormText>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="three"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "three": 3,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {
                                "three": true,
                              },
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "three": 3,
                              },
                            }
                          }
                          name="three"
                        />
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;

exports[`Storyshots Form/TextField name, no label 1`] = `
<Form
  values={
    Object {
      "one": 1,
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "one": 1,
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <Form
      tag={[Function]}
    >
      <Form
        className=""
      >
        <Component
          className=""
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "one": 1,
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": undefined,
              "values": Object {
                "one": 1,
              },
            }
          }
        >
          <form
            className=""
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <TextField
              name="one"
            >
              <FormGroup
                row={true}
                tag="div"
              >
                <div
                  className="position-relative row form-group"
                >
                  <Label
                    for="one"
                    lg={2}
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <label
                      className="col-12 col-lg-2 col-form-label"
                      htmlFor="one"
                    />
                  </Label>
                  <Col
                    lg={8}
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                    xs={12}
                  >
                    <div
                      className="col-12 col-lg-8"
                    >
                      <FormikConnect(FieldInner)
                        className="form-control"
                        component="input"
                        id="one"
                        name="one"
                      >
                        <FieldInner
                          className="form-control"
                          component="input"
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "one": 1,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "one": 1,
                              },
                            }
                          }
                          id="one"
                          name="one"
                        >
                          <input
                            className="form-control"
                            id="one"
                            name="one"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value={1}
                          />
                        </FieldInner>
                      </FormikConnect(FieldInner)>
                      <FormikConnect(ErrorMessageImpl)
                        component={[Function]}
                        name="one"
                      >
                        <ErrorMessageImpl
                          component={[Function]}
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "one": 1,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validate": undefined,
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validationSchema": undefined,
                              "values": Object {
                                "one": 1,
                              },
                            }
                          }
                          name="one"
                        />
                      </FormikConnect(ErrorMessageImpl)>
                    </div>
                  </Col>
                </div>
              </FormGroup>
            </TextField>
          </form>
        </Component>
      </Form>
    </Form>
  </Formik>
</Form>
`;
